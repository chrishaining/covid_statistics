---
title: "Covid-19"
output: html_notebook
---

# Data collected from the World Health Organization's [daily situation reports](https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports/) on the number of deaths. 

Note that there is some uncertainty as regards what the numbers represent. This is because it is not clear whether all the deaths have been caused by Covid-19 or whether these were people who died with Covid-19 (and Covid-19 may not have been the cause of death).

```{r}
library(tidyr)
library(dplyr)
library(stringr)
library(readr)
library(lubridate)
```

# Import the csv file
```{r}
deaths <- read_csv('covid_19_deaths.csv')

deaths
```

# Create a new column that extrapolates the predicted number of cases based on a death rate of 1% of infected.
```{r}


deaths <- deaths %>% rename(uk_deaths="UK Deaths", global_deaths="Global Deaths")
columns <- colnames(deaths)
str_glue("Column: {columns}")
cases <- deaths %>% mutate(estimated_uk_cases=(uk_deaths*100), estimated_global_cases=(global_deaths*100))
cases
```

# Display the data
```{r}
library(ggplot2)
graph <- ggplot(cases,aes(x=Date,y=estimated_uk_cases)) + geom_line() + labs(title="Estimated Daily Number of Covid-19 Cases in the UK")
graph




```

What else can we do with the dataset?
* user other death rates (e.g. 0.1%, 0.5%, 2%, 3%)
* add datasets for other countries
* calculate growth rates
* predict the number of cases for a given time period.

```{r}
#add columns for various estimated death rates (0.1%, 0.5%, 1%, 2%, 3%)

cases_complex <- cases %>% mutate(estimated_uk_cases_tenth=(uk_deaths*1000), estimated_global_cases_tenth=(global_deaths*1000))

cases_complex <- cases_complex %>% mutate(estimated_uk_cases_half=(uk_deaths*200), estimated_global_cases_half=(global_deaths*200))

cases_complex <- cases_complex %>% mutate(estimated_uk_cases_two=(uk_deaths*50), estimated_global_cases_two=(global_deaths*50))

cases_complex <- cases_complex %>% mutate(estimated_uk_cases_three=(uk_deaths*33.3), estimated_global_cases_three=(global_deaths*33.3))

#rename columns
cases_complex <- cases_complex %>% rename(estimated_uk_cases_one=estimated_uk_cases)
cases_complex <- cases_complex %>% rename(estimated_global_cases_one=estimated_global_cases)

#reorder the columns
#new_order <- c(Date, uk_deaths, global_deaths, estimated_uk_cases_tenth, estimated_uk_cases_half, estimated_uk_cases_one, estimated_uk_cases_two, estimated_uk_cases_three, estimated_global_cases_tenth, estimated_global_cases_half, estimated_global_cases_one, estimated_global_cases_two, estimated_global_cases_three)

#cases_complex <- cases_complex[, new_order]

cases_complex
```

# This table has too many columns for my liking. Let's split it into two tables.

```{r}
uk_data <- cases_complex %>% select(Date, uk_deaths, estimated_uk_cases_tenth, estimated_uk_cases_half, estimated_uk_cases_one, estimated_uk_cases_two, estimated_uk_cases_three)
uk_data

global_data <- cases_complex %>% select(Date, global_deaths, estimated_global_cases_tenth, estimated_global_cases_half, estimated_global_cases_one, estimated_global_cases_two, estimated_global_cases_three)
global_data


```


# Line graph with multiple lines
```{r}

complex_uk_graph <- ggplot(uk_data,aes(x=Date)) + geom_line(aes(y=estimated_uk_cases_tenth),color='darkred') + geom_line(aes(y=estimated_uk_cases_half),color='steelblue') + geom_line(aes(y=estimated_uk_cases_one),color='green') + geom_line(aes(y=estimated_uk_cases_two),color='yellow') + 
geom_line(aes(y=estimated_uk_cases_three),color='pink') + 
  labs(title="Estimated Daily Number of Covid-19 Cases in the UK")
complex_uk_graph



```
Beware: the start of the graph doesn't tell us much. Given that the number of deaths was 0, the graph shows the number of cases as 0. However, there is expected to be a time-lag of approximately 14 days between contracting the virus and death. Given that the first death was noted on 7th March, this suggests that the number of cases in March 2020 was always greater than 0.


```{r}
complex_global_graph <- ggplot(global_data,aes(x=Date)) + geom_line(aes(y=estimated_global_cases_tenth),color='darkred') + geom_line(aes(y=estimated_global_cases_half),color='steelblue') + geom_line(aes(y=estimated_global_cases_one),color='green') + geom_line(aes(y=estimated_global_cases_two),color='yellow') + 
geom_line(aes(y=estimated_global_cases_three),color='pink') + 
  labs(title="Estimated Daily Number of Covid-19 Cases: Global")
complex_global_graph
```
## Some things to note
My calculations do not take into account any time lag between the moment someone becomes infected and the moment of death. So, if 100 people had died by 14th March, my calculations estimate that 1000 people were infected (based on 1% mortality rate). However, since people do not die immediately upon infection, the figure of 1000 people would have been reached before 14th March. Based on the information I have read/heard in the news, the figure of 1000 infected people would have been reached on 1st March. Therefore, the estimates for the number of cases should be considered as the estimates for two weeks previous to the date you are reading this. (e.g. if you are reading this on 14th April, the estimate is for the 1st April). 

The UK chart shows a steeper rise in cases. This is not surprising, given that the UK started the period with 0 cases, whilst the global figures went back to previous months. However, the overall trend is similar in both charts: slow growth then around March 16th there is an increase in the growth rate. 

Note also that both charts show a kink at the same time (a few days after March 16th). This could be worth investigating, as it may indicate a change in the way the data were collected.


## Revised UK Data: Date-14 Days (Using Cumulative Death Tolls)
To account for the estimated two-week time lag from infection to death, I have created a new column, `new_data`, which is 14 days prior to the date that deaths were logged. For example, if the number of deaths were logged on 15th March, `Date` would be `2020-03-15` and `new_date` would be `2020-03-01`. This solution still has a major drawback. It is based on the cumulative deaths on ny given date. Some of those deaths will have happened weeks previously, meaning we could overestimate the total number of cases. It may be useful to look at how many people died on a particular date. 

```{r}
#create new datasets that mutate the date to two weeks previous.
revised_uk_data <- uk_data %>% mutate(new_date=Date-days(14))
revised_uk_data
```

## Revised UK Data: Date-14 Days (Using Daily New Deaths)
To 
```{r}
#create new datasets that mutate the date to two weeks previous and that use daily new deaths rather than cumulative deaths
revised_uk_data_two <- revised_uk_data %>% mutate(new_deaths=c(uk_deaths[1], diff(uk_deaths)))
revised_uk_data_two <- revised_uk_data_two %>% rename(cumulative_deaths=uk_deaths)

revised_order <- c("Date", "cumulative_deaths", "new_deaths", "new_date", "estimated_uk_cases_tenth", "estimated_uk_cases_half", "estimated_uk_cases_one", "estimated_uk_cases_two", "estimated_uk_cases_three")
revised_cols <- colnames(revised_uk_data_two)
revised_cols

revised_uk_data_two <- revised_uk_data_two[, revised_order]
revised_uk_data_two
```

```{r}
library(scales)
#revised_uk_data_two <- revised_uk_data_two %>% mutate(labels=label_number())
revised_uk_line <- ggplot(revised_uk_data_two,aes(x=new_date)) + geom_line(aes(y=estimated_uk_cases_tenth)) + #geom_line(aes(y=estimated_uk_cases_half),color='steelblue') + 
#geom_line(aes(y=estimated_uk_cases_three),color='pink') + 
  geom_line(aes(y=estimated_uk_cases_one)) + geom_line(aes(y=estimated_uk_cases_two)) + scale_y_continuous(labels=label_comma())
  labs(title="Estimated Number of Covid-19 Cases in the UK",x="Date",y="Estimated Cases") 
revised_uk_line



#demo_continuous(c(-1e-6, 1e-6), labels = label_number())

#> scale_x_continuous(labels = label_number())
#ggplot(df, aes(x=date)) + 
 # geom_line(aes(y=psavert, col="psavert")) + 
  #geom_line(aes(y=uempmed, col="uempmed")) + 
  #labs(title="Time Series of Returns Percentage", 
   #    subtitle="Drawn From Wide Data format", 
    #   caption="Source: Economics", y="Returns %") +  # title and caption
  #scale_x_date(labels = lbls, breaks = brks) +  # change to monthly ticks and labels
  #scale_color_manual(name="", 
                   #  values = c("psavert"="#00ba38", "uempmed"="#f8766d")) +  # line color
  #theme(panel.grid.minor = element_blank())  # turn off minor grid


```

```{r}
library(reshape2)

parsed_uk_data <- revised_uk_data_two %>% select(-Date,-cumulative_deaths,-new_deaths,-estimated_uk_cases_half,-estimated_uk_cases_three)

ukDataMelted <- reshape2::melt(parsed_uk_data, id.var='new_date')
head(ukDataMelted)
 
```

```{r}
ggplot(ukDataMelted, aes(x=new_date, y=value, col=variable)) + scale_x_discrete() + scale_y_discrete() + geom_line() + labs(title="Estimated Number of Covid-19 Cases in the UK")


#, x="Date",y="Estimated Cases")



 
  
  

```

## Daily Numbers of Deaths as %
```{r}
uk_data_with_rate <- revised_uk_data_two %>% #mutate(daily_deaths_percent=c((new_deaths[1]/cumulative_deaths)*100))
mutate(daily_deaths_percent=100*(new_deaths/(cumulative_deaths-new_deaths)))
uk_data_with_rate
```

```{r}
graph <- ggplot(uk_data_with_rate,aes(x=Date,y=daily_deaths_percent)) + geom_line() + labs(title="Daily Increase in Covid-19 Deaths in the UK as % of total deaths",x="Data",y="Growth Rate (%)")
graph
```
```{r}
#revised_uk_data_two <- revised_uk_data_two %>% mutate(labels=label_number())
uk_deaths_line <- ggplot(uk_data_with_rate,aes(x=Date)) + geom_line(aes(y=cumulative_deaths)) + 
  geom_line(aes(y=new_deaths)) + scale_y_continuous(labels=label_comma())
  labs(title="Daily Covid-19 Deaths in the UK",x="Date",y="Deaths") 
uk_deaths_line
```

```{r}
#give estimates numbers of deaths in a year, if various daily death tolls occur
last_two_weeks <- uk_data_with_rate %>% filter(Date>="2020-03-13")
last_two_weeks

daily_death_tolls_fortnight <- mean(last_two_weeks$new_deaths)
daily_death_tolls_fortnight

annual_deaths_fortnight <- daily_death_tolls_fortnight*365
annual_deaths_fortnight

last_week <- uk_data_with_rate %>% filter(Date>="2020-03-19")

daily_death_tolls_week <- mean(last_week$new_deaths)
daily_death_tolls_week

annual_deaths_week <- daily_death_tolls_week*365
annual_deaths_week
```






