---
title: "European Covid-19 Stats: per Capita Tests and Deaths"
output: html_notebook
---
# Comparison of different European countries
This is a DESCRIPTIVE and EXPLORATORY analysis. The purposes are:
1. to find summarise data about the Covid-19 virus in Europe (the descriptive part)
2. to explore relationships between variables in the data from step 1 (the exploratory part), especifically:
      a. Is there a correlation between GPD and testing?
      b. Is there a correlation between testing and deaths?
      c. Is there a correlation between GDP and deaths?
      
For each of the three questions in purpose 2, the null hypothesis is that there is no correlation between the variables.

Main variables = population, number of deaths, number of tests
Additional variables = deaths per capita, tests per capita.

## Methodology
1. Online search to see if anyone else has done this analysis. 
2. Find and import datasets on: populations of European countries; GDP per capita; number of Covid-19 tests; number of Covid-19 deaths
3. Inspect and wrangle the data
4. Combine the datasets
5. Display the data
6. Look for patterns
7. Summarise my findings.

### Assumptions/Possible Scoping Problems
* What constitutes a European country? EU only? Russia? 
* Should the analysis look at GDP per capita? This could be a confounding variable - we would expect that richer countries can afford to do more testing and have better healthcare (and as a consequence, fewer deaths). But I'm making a big assumption here - it could be that GDP doesn't have an impact on these things. Hence, I should include GDP per capita as a variable. 
* How should I deal with time? Should this be a snapshot of data on a particular date, or will I look at data over time?
* Should I factor in the approaches each government is taking? 
* Should I start with a hypothesis? I'm doing descriptive and exploratory analysis, but a hypothesis and questions might help to focus my analysis.






```{r}
library(dplyr)
library(readr)
library(stringr)

#import the data
gdp <- read_tsv('imf_gdp.tsv')

#inspect the data
#head(gdp)

germany_gdp <- gdp %>% filter(Country=="Germany")
germany_gdp

gdp_cols <- colnames(gdp)
gdp_cols

```

```{r}
#wrangle the data 
parsed_gdp <- gdp %>% select(Country, "Subject Descriptor", Scale, "2019") 
#parsed_gdp <- parsed_gdp %>% filter("Subject Descriptor"=="Gross domestic product per capita, current prices")
#parsed_gdp <- parsed_gdp %>% filter("WEO Subject Code" == "LP")

head(parsed_gdp)
```

```{r}
# wrangle the data part 2: filtering 
# I initially had a problem with the filtering, due to the column names. So, first, change the problematic column names to single-word names.
parsed_gdp <- parsed_gdp %>% rename(descriptor="Subject Descriptor")
parsed_gdp
#filtered_gdp <- parsed_gdp %>% filter(descriptor == "Population" || descriptor=="Gross domestic product per capita, current prices")
#filtered_gdp
```
## 2019 Population 
```{r}
# create a table of populations
populations <- parsed_gdp %>% filter(descriptor == "Population")
populations <- populations %>% rename(population="2019")
populations <- populations %>% mutate(population=as.numeric(population))
populations <- populations %>% mutate(population=1000000*population)
populations <- populations %>% select(-descriptor, -Scale)
populations

```

## 2019 GDP Per Capita  (USD)
```{r}
#create a table of GDPs

renamed_gdp <- gdp %>% rename(descriptor="Subject Descriptor")

gdps <- renamed_gdp %>% filter(descriptor=="Gross domestic product per capita, current prices")

gdps <- gdps %>% filter(Units=="U.S. dollars")
gdps <- gdps %>% rename(gdp_per_capita="2019")
#gdps <- gdps %>% mutate(gdp_per_capita=as.numeric((gdp_per_capita)))
gdps <- gdps %>% select(Country, gdp_per_capita)
gdps
```
A problem for now is that the gdp_per_capita column is a character string, and cannot be easily converted to a number. Once I have filtered the table by country, I can deal with the problem of converting gdp_per_capita to a number.


## Combining the population and gdp_per_capita tables

```{r}
population_and_gdp <- populations %>% bind_cols((gdps))
population_and_gdp <- population_and_gdp %>% select(-Country1)
population_and_gdp
```

